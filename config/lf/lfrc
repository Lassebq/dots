# █   █▀ █▀▄ ▄▀▀
# █▄▄ █▀ █▀▄ ▀▄▄
#
# vim: filetype=bash

set promptfmt "\033[48;2;17;17;27;34m  󰉋 \033[1;38;2;187;195;223m%w\033[0;38;2;17;17;27;44m\033[1m%f\033[0;34m\033[0m"
set cursorpreviewfmt "\033[7;1m"

set shell bash
set shellopts '-eu'
set ifs "\n"
set hidden
set scrolloff 5
set ratios 1:2
set info size
set mouse
set sixel
set icons

set previewer ~/.config/lf/previewer
set cleaner ~/.config/lf/cleaner

map <enter> :shell
map <c-q> :quit
map <c-z> :restore
map <c-s> :calcdirsize
map <c-c> :copy
map <c-v> :paste
map <c-x> :cut
map <f-2> :rename
map <f-5> :reload
map . :set hidden!
map ` !true
map <esc> :{{unselect; clear;}}

cmd open $~/.config/lf/opener "$f"

# Using shell-pipe because with shell it "flickers"
cmd mkexec %{{
    if [ -x $f ];
        then chmod -x "$f"
        else chmod +x "$f"
    fi
    lf -remote "send $id :reload"
}}

cmd linktarget %{{
    if [ -n "$fx" ]; then
        ln -s $fx .
    fi
    lf -remote "send $id :reload"
}}

cmd del %{{
    for file in $fx
    do
        if [[ -f "$file" && "$(stat -c%s "$file")" = 0 ]]; then
            rm "$file"
        elif [[ -d "$file" && -z $(ls "$file") ]]; then
            rmdir "$file"
        else
            if [ "$(id -u)" = 0 ]; then
                rm -rf "$file"
            else
                gio trash "$file"
            fi
        fi
    done
}}

cmd restore %{{
    trashdir="${XDG_DATA_HOME:-$HOME/.local/share}/Trash/files"
    arr=($(ls -t "$trashdir"))
    if [ -z "${arr[@]}" ]; then
        echo "Trash is empty"
        exit 0
    fi
    gio trash --restore "trash:///${arr[0]}"
}}

map <delete> :del
map <s-delete> %rm -rf $fx
map <c-k> :mkexec
map <c-l> :linktarget

map a :cd
map sr :set reverse!
map x $$f
map X !$f
map n $wl-copy $f

