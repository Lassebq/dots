#!/bin/bash

riverctl map -layout 0 normal Super Q spawn "$TERMINAL"
riverctl map -layout 0 normal Super W close
riverctl map -layout 0 normal Super M spawn ~/.config/wlogout/exec
riverctl map -layout 0 normal Super E spawn "gtk-launch nemo"
riverctl map -layout 0 normal Super A spawn "rofi -show drun"
riverctl map -layout 0 normal Super R spawn "rofi -show run"
riverctl map -layout 0 normal Super+Shift T spawn ~/dots/rofi-dmenu
riverctl map -layout 0 normal Super G spawn firefox-nightly
riverctl map -layout 0 normal Super+Shift R spawn ~/.config/river/river
riverctl map normal None Print spawn 'sh -c "grim - | wl-copy"'
riverctl map normal Shift Print spawn 'sh -c "wayland-shot | wl-copy"'

riverctl focus-follows-cursor always

riverctl map normal Super Right focus-view next
riverctl map normal Super Left focus-view previous

riverctl map normal Super Down focus-view next
riverctl map normal Super Up focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift Right swap next
riverctl map normal Super+Shift Left swap previous

riverctl map normal Super+Shift Down swap next
riverctl map normal Super+Shift Up swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
#riverctl map normal Super Return zoom

riverctl map -layout 0 normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map -layout 0 normal Super L send-layout-cmd rivertile "main-ratio +0.05"

riverctl map normal Super K send-layout-cmd rivertile "main-count +1"
riverctl map normal Super J send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map -layout 0 normal Super+Alt H move left 100
riverctl map -layout 0 normal Super+Alt J move down 100
riverctl map -layout 0 normal Super+Alt K move up 100
riverctl map -layout 0 normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map -layout 0 normal Super+Alt+Control H snap left
riverctl map -layout 0 normal Super+Alt+Control J snap down
riverctl map -layout 0 normal Super+Alt+Control K snap up
riverctl map -layout 0 normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map -layout 0 normal Super+Alt+Shift H resize horizontal -100
riverctl map -layout 0 normal Super+Alt+Shift J resize vertical 100
riverctl map -layout 0 normal Super+Alt+Shift K resize vertical -100
riverctl map -layout 0 normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

riverctl map -layout 0 normal Super D toggle-float
riverctl map -layout 0 normal Super F toggle-fullscreen

# Super+Shift+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super+Control+Shift Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Super+Control+Shift Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super+Control+Shift Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super+Control+Shift Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl s +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl s 5%-'
done

# Set background and border color
~/.config/river/colors

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add csd -app-id "bar"

# Set keyboard repeat rate
riverctl set-repeat 30 200

riverctl keyboard-layout -options "grp:shift_caps_toggle" us,ru

inputs=($(riverctl list-inputs | grep "^pointer-"))
for input in "${inputs[@]}"
do
    riverctl input "$input" tap enabled
done
